WIP (work-in-progress)
======================

EDITOR:
-------

Input:

	Input events should be sent even when outside viewframe

Gizmo:

	Fix Scale and Rotate gizmos
	Make the Gizmo node transform a proxy of the original
	Get picking working properly with multiple gizmos
	When the Camera moves, mouse should be tested
	Panning is wrong.
	Picking when the mouse moves (DONE)
	Change gizmo color when user picks axis (DONE)
	Add drag event and change the Transform (DONE)
	Fix cone backface culling (DONE)
	Scale the gizmo properly in relation to the camera distance (DONE)

Viewframe:

	Fix the control border
	Wire the camera render mode buttons
	Redraw when a resource gets updated
	
Terrain editing:

	Brushes interface
	Use a separate VB attribute for the terrain heights
	Projectors/Decals for terrain
	Brush interface for editing (WIP)
	Generic paging interface (WIP)
	Streaming of terrain chunks and textures
	Randomized Perlin noise terrain generation
	Average terrain normals (WIP)

View frustum culling:

	Plane math class
	Frustum-Plane intersection
	Integrate in Camera::cull

Skydome component:

	Add billboards for Sun and Moon
	Switch to triangle strips

Console:

	Clicks should not change the insertion point
	readline type of library would be kind of nice
	Write a line then go backwards and to the line again and color is white...
	Override Lua 'print' method
	
Options:

	Add a preference pane with:
		- Shortcuts
		- Grid settings
		- Colors
	This can be handled with a Property system (like Firefox).

ENGINE:
-------

Scene:

	Frustum class (Camera and Light integration)
	Quadtree for fast terrain queries
	Geometry component sharing (Instancing)

Scripting:

	Fix Lua state closing
	Per-script Lua state

Textures:
	Support DDS
	Warn and downsample if texture size is not supported
	Resize the sample to nearest-POT if rectangle textures not supported
	Generate and support MIP-maps
	Generate and support normal maps
	Combine and support cubemaps / skybox textures
	Check squish and NVIDIA Texture Tools libraries

Audio:

	Handle audio streaming for lightweight playback without consuming lots of memory
	Debug a crash in triton's desktop with an Audigy 4 (XP BSOD in Creative's driver 'ctaud2k.sys')
	Bundle OpenAL Soft
	
Logger:

	Fix format log time to handle minutes, hours and days
	Use truncation and close file so each log entry gets commited in each write
	The Log class should use the user writing directory for output
	GetLoggers for each class (could be integrated with Profiler? :)
	The Logger should display the date and time of creation
	Typesafe logging (FastFormat API)
	
Resource Management:

	Make a Localization class, potentially integrating .po files
	Check how the resource manager will handle missing resources
	Create a ResourceFile class (maybe stream-based - C++ streams? )
	Magic header resource type detection
	Case-insensitive comparisons in map
	
Window:

	Full-screen windowed mode/minimizing doesn't seem to work...
	Make the Engine class take Window creation settings
	The Window title should be set on Window creation
	Move the window polling to a different thread (smooth resizing / maybe SFML itself will do this in 2.0)
	Hide the window until show is requested.
	http://msdn.microsoft.com/en-us/library/ms648383%28VS.85%29.aspx
	Resize the Keyboard KeyState to the proper size. The current 1024 is hackish.

Platform:

	We need a crash handler!!! :)
	Cross-platform Clipboard access
	Multithreaded timing and timing leaps (check SFML tracker / OGRE code for more info.)
		
Rendering:
	
	Add Z-bias to the AABB renderables
	Font handling via FreeType 2
	Signed distance fonts
	Bitmap font file format (and converter for some freeware generator tool)
	Add Blending defaults (Modulate, Replace, etc)

VFS:

	Patch PhysFS to use the proper user dir for App Data on Windows
	Fix Watcher (though it seems to be doing the right thing).

Engine Modularization/Simplification Work
	
	Compile as DLL (Reverted)
	Remove namespaces (DONE)
	Remove Singletons from the codebase (WIP)
	Implement ResourceLoaders as (static) plugins	
	Rename Timer into Stopwatch
	Refactor core code into its own static library (Reverted)
	Make Singleton code thread-safe (double check pattern?)

http://www.introgamedev.com/general_memory.html
http://xania.org/200512/crt-heap-fragmentation-in-windows
http://blog.pavlov.net/2007/11/11/windows-low-fragmentation-heap/
http://msdn.microsoft.com/en-us/library/aa366750%28VS.85%29.aspx
http://www.gamasutra.com/view/feature/2971/play_by_play_effective_memory_.php