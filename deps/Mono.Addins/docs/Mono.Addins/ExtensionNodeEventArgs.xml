<Type Name="ExtensionNodeEventArgs" FullName="Mono.Addins.ExtensionNodeEventArgs">
  <TypeSignature Language="C#" Value="public class ExtensionNodeEventArgs : Mono.Addins.ExtensionEventArgs" />
  <AssemblyInfo>
    <AssemblyName>Mono.Addins</AssemblyName>
    <AssemblyVersion>0.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.Addins.ExtensionEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Arguments for extension node events.</summary>
    <remarks>Arguments for extension node events.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExtensionNodeEventArgs (Mono.Addins.ExtensionChange change, Mono.Addins.ExtensionNode node);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="change" Type="Mono.Addins.ExtensionChange" />
        <Parameter Name="node" Type="Mono.Addins.ExtensionNode" />
      </Parameters>
      <Docs>
        <param name="change">Type of change.</param>
        <param name="node">Node that has been added or removed.</param>
        <summary>Creates an new instance.</summary>
        <remarks />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public Mono.Addins.ExtensionChange Change { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Addins.ExtensionChange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Type of change.</summary>
        <value>Type of change.</value>
        <remarks />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ExtensionNode">
      <MemberSignature Language="C#" Value="public Mono.Addins.ExtensionNode ExtensionNode { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Addins.ExtensionNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Node that has been added or removed.</summary>
        <value>A node.</value>
        <remarks>Node that has been added or removed.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ExtensionObject">
      <MemberSignature Language="C#" Value="public object ExtensionObject { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extension object that has been added or removed.</summary>
        <value>An extension object.</value>
        <remarks>This method can only be called if the node is of type TypeExtensionNode, an <see cref="T:System.InvalidOperationException" /> exception is thrown otherwise.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public override string Path { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
